<?php

/**
 * Ademe_Model_Base_User
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property char $password
 * @property string $nom
 * @property string $prenom
 * @property string $telephone
 * @property string $email
 * @property string $fonction
 * @property boolean $enabled
 * @property boolean $en_attente
 * @property timestamp $last_connection
 * @property timestamp $last_connection_tmp
 * @property clob $preferences
 * @property Doctrine_Collection $Profils
 * @property Doctrine_Collection $Structures
 * @property Doctrine_Collection $Etablissements
 * @property Doctrine_Collection $InviteEtablissements
 * @property Doctrine_Collection $InviteStructures
 * @property Doctrine_Collection $Evaluations
 * @property Doctrine_Collection $UserTexte
 * @property Doctrine_Collection $UserAuthProfils
 * @property Doctrine_Collection $UserTokens
 * @property Doctrine_Collection $UserProfilEdit
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Ademe_Model_Base_User extends Asi_Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('password', 'char', 40, array(
             'type' => 'char',
             'length' => '40',
             ));
        $this->hasColumn('nom', 'string', 64, array(
             'type' => 'string',
             'length' => '64',
             ));
        $this->hasColumn('prenom', 'string', 64, array(
             'type' => 'string',
             'length' => '64',
             ));
        $this->hasColumn('telephone', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('email', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '100',
             ));
        $this->hasColumn('fonction', 'string', 64, array(
             'type' => 'string',
             'length' => '64',
             ));
        $this->hasColumn('enabled', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('en_attente', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('last_connection', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('last_connection_tmp', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('preferences', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));
        $this->hasColumn('consentement', 'integer', 1, array(
            'type' => 'integer',
            'notnull' => true,
            'default' => 0,
            'length' => '1',
        ));
        $this->hasColumn('date_rgpd', 'datetime', null, array(
            'type' => 'datetime',
        ));


        $this->index('email_UNIQUE', array(
             'fields' => 
             array(
              0 => 'email',
             ),
             'type' => 'unique',
             ));
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Ademe_Model_AuthProfil as Profils', array(
             'refClass' => 'Ademe_Model_UserAuthProfil',
             'local' => 'user_id',
             'foreign' => 'auth_profil_id'));

        $this->hasMany('Ademe_Model_Structure as Structures', array(
             'local' => 'id',
             'foreign' => 'referent_id'));

        $this->hasMany('Ademe_Model_Etablissement as Etablissements', array(
             'local' => 'id',
             'foreign' => 'referent_id'));

        $this->hasMany('Ademe_Model_InviteEtablissement as InviteEtablissements', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Ademe_Model_InviteStructure as InviteStructures', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Ademe_Model_Evaluation as Evaluations', array(
             'local' => 'id',
             'foreign' => 'validateur_id'));

        $this->hasMany('Ademe_Model_UserTexte as UserTexte', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Ademe_Model_UserAuthProfil as UserAuthProfils', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Ademe_Model_UserToken as UserTokens', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Ademe_Model_UserProfilEdit as UserProfilEdit', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}